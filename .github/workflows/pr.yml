name: PR Validation

on:
    pull_request:
        branches: [main, develop]
        types: [opened, synchronize, reopened]

jobs:
    # Validate commit messages - DISABLED (single developer project)
    # commitlint:
    #     name: Validate Commits
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v4
    #           with:
    #               fetch-depth: 0

    #         - uses: pnpm/action-setup@v2
    #           with:
    #               version: 8

    #         - uses: actions/setup-node@v4
    #           with:
    #               node-version: 18
    #               cache: "pnpm"

    #         - run: pnpm install --frozen-lockfile

    #         - name: Validate commit messages
    #           run: npx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.event.pull_request.head.sha }} --verbose

    # Lint code
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - run: pnpm install --frozen-lockfile
            - run: pnpm build
            - run: pnpm lint
            - run: pnpm format:check

    # TypeScript type checking
    typecheck:
        name: Type Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - run: pnpm install --frozen-lockfile
            - run: pnpm build
            - run: pnpm typecheck

    # Run tests with coverage
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - run: pnpm install --frozen-lockfile
            - run: pnpm build
            - run: pnpm test:coverage

    # Build packages
    build:
        name: Build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18, 20, 22]
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - run: pnpm install --frozen-lockfile
            - run: pnpm build
