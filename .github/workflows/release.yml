name: Release

on:
    push:
        branches: [main]

jobs:
    # Run full CI before release
    ci:
        name: CI
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - run: pnpm install --frozen-lockfile
            - run: pnpm lint
            - run: pnpm format:check
            - run: pnpm typecheck
            - run: pnpm test:coverage
            - run: pnpm build

            # Upload coverage for main branch
            - uses: codecov/codecov-action@v3
              with:
                  files: ./coverage/coverage-final.json
                  flags: unittests
                  name: codecov-umbrella

    # Build and test on multiple Node versions
    build-matrix:
        name: Build Matrix
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18, 20, 22]
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "pnpm"

            - run: pnpm install --frozen-lockfile
            - run: pnpm build
            - run: pnpm test

    # Release to NPM
    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [ci, build-matrix]
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"
                  registry-url: "https://registry.npmjs.org"

            - run: pnpm install --frozen-lockfile

            # Configure git for semantic-release
            - name: Configure Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

            # Run semantic-release
            - name: Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: npx semantic-release

            # Post-release cleanup and notifications
            - name: Post Release
              if: success()
              run: |
                  echo "‚úÖ Release completed successfully!"
                  echo "üì¶ Packages published to NPM"
                  echo "üìù Changelog updated"
                  echo "üè∑Ô∏è GitHub release created"
